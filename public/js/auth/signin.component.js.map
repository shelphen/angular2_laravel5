{"version":3,"sources":["auth/signin.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA2BA;gBAGI,yBAAoB,GAAe,EAAU,YAAyB,EAAU,OAAe,EAAU,aAA2B;oBAAhH,QAAG,GAAH,GAAG,CAAY;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBAAU,YAAO,GAAP,OAAO,CAAQ;oBAAU,kBAAa,GAAb,aAAa,CAAc;gBAAG,CAAC;gBAExI,kCAAQ,GAAR;oBAAA,iBAYC;oBAXG,IAAM,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAC3E,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;yBACzB,SAAS,CACN,UAAA,IAAI;wBACA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;4BACjB,6CAA6C;4BAC7C,+CAA+C;4BAC/C,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACpC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,EAArC,CAAqC,CACjD,CAAC;gBACV,CAAC;gBAED,kCAAQ,GAAR;oBACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;wBACzB,KAAK,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,OAAO,CAAC;gCAC3B,mBAAU,CAAC,QAAQ;gCACnB,IAAI,CAAC,OAAO;6BACf,CAAC,CAAC;wBACH,QAAQ,EAAE,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;qBACtC,CAAC,CAAC;gBACP,CAAC;gBAED,uCAAa,GAAb;oBACI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAClC,CAAC;gBAEO,iCAAO,GAAf,UAAgB,OAAgB;oBAC5B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,uIAAuI,CAAC,CAAC,CAAC,CAAC;wBAChK,MAAM,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC;oBAC/B,CAAC;gBACL,CAAC;gBAzDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,84BAeT;qBACJ,CAAC;;mCAAA;gBAwCF,sBAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,6CAsCC,CAAA","file":"auth/signin.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ControlGroup, FormBuilder, Validators, Control } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\n\nimport { User } from \"./user\";\nimport { AuthService } from \"./auth.service\";\nimport { ErrorService } from \"../errors/error.service\";\n@Component({\n    selector: 'my-signin',\n    template: `\n        <section class=\"col-md-8 col-md-offset-2\">\n            <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Mail</label>\n                    <input [ngFormControl]=\"myForm.find('email')\" type=\"email\" id=\"email\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input [ngFormControl]=\"myForm.find('password')\" type=\"password\" id=\"password\" class=\"form-control\">\n                </div>\n                <button type=\"button\" class=\"btn btn-warning\" (click)=\"resetPassword()\">Reset Password</button>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!myForm.valid\">Sign In</button>\n            </form>\n        </section>\n    `\n})\n\nexport class SigninComponent implements OnInit {\n    myForm: ControlGroup;\n\n    constructor(private _fb:FormBuilder, private _authService: AuthService, private _router: Router, private _errorService: ErrorService) {}\n\n    onSubmit() {\n        const user = new User(this.myForm.value.email, this.myForm.value.password);\n        this._authService.signin(user)\n            .subscribe(\n                data => {\n                    console.log(data),\n                    // localStorage.setItem('token', data.token);\n                    // localStorage.setItem('userId', data.userId);\n                    this._router.navigateByUrl('/');          \n                },\n                error => this._errorService.handleError(error)\n            );\n    }\n\n    ngOnInit() {\n        this.myForm = this._fb.group({\n            email: ['', Validators.compose([\n                Validators.required,\n                this.isEmail\n            ])],\n            password: ['', Validators.required]\n        });\n    }\n\n    resetPassword(){\n        console.log('Reset Password');\n    }\n\n    private isEmail(control: Control): {[s: string]: boolean} {\n        if (!control.value.match(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")) {\n            return {invalidMail: true};\n        }\n    }\n}"],"sourceRoot":"/source/"}